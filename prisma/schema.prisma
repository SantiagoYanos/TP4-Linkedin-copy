generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model city {
  id       Int     @id @default(autoincrement())
  name     String? @db.VarChar(45)
  code     String? @db.VarChar(45)
  state_id Int
  state    state   @relation(fields: [state_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "city_ibfk_1")
  user     user[]

  @@index([state_id], map: "state_idx")
}

model comment {
  id         Int       @id @default(autoincrement())
  body       String?   @db.VarChar(256)
  createdAt  DateTime? @default(now()) @db.Timestamp(0)
  post_id    Int
  written_by String    @db.VarChar(256)
  post       post      @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "comment_ibfk_1")
  user       user      @relation(fields: [written_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "comment_ibfk_2")
  active     Boolean?  @default(true) @db.Boolean

  @@index([post_id], map: "post_id_idx")
  @@index([written_by], map: "written_by_idx")
}

model country {
  id    Int     @id @default(autoincrement())
  name  String? @db.VarChar(45)
  code  String? @db.VarChar(45)
  state state[]
  user  user[]
}

model field {
  id      Int     @id @default(autoincrement())
  name    String? @db.VarChar(45)
  type_id Int?
  skill   skill[]
}

model field_type {
  id           Int            @id @default(autoincrement())
  name         String         @unique @db.VarChar(45)
  organization organization[]
}

model hobby {
  id      Int     @id @default(autoincrement())
  name    String? @db.VarChar(45)
  user_id String  @db.VarChar(45)
  user    user    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "hobby_ibfk_1")

  @@index([user_id], map: "user_id_idx")
}

model language {
  id   Int     @id @default(autoincrement())
  name String? @unique @db.VarChar(45)
  user user[]
}

model lenguage_x_user {
  id_user     String  @id
  id_lenguage Int
  level       String? @db.VarChar(45)
}

model organization {
  id                                 Int        @id @default(autoincrement())
  name                               String?    @db.VarChar(45)
  website                            String?    @db.VarChar(45)
  type                               Type?      @default(private)
  dateOfFounding                     String?    @db.VarChar(45)
  createdAt                          DateTime?  @default(now()) @db.Timestamp(0)
  field_type_id                      Int
  founder_id                         String     @db.VarChar(45)
  field_type                         field_type @relation(fields: [field_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_organization_field_type_idx")
  user_organization_founder_idTouser user       @relation("organization_founder_idTouser", fields: [founder_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "organization_ibfk_2")
  user_organization                  user[]     @relation("organization")
  active                             Boolean?   @default(true) @db.Boolean

  @@index([field_type_id], map: "fk_organization_field_type1_idx")
  @@index([founder_id], map: "founder_idx")
}

enum Type {
  private
  public
}

model post {
  id         Int       @id @default(autoincrement())
  body       String?   @db.VarChar(1024)
  multimedia String?   @db.VarChar(500)
  createdAt  DateTime? @default(now()) @db.Timestamp(0)
  updatedAt  DateTime? @default(now()) @db.Timestamp(0)
  author_id  String    @db.VarChar(45)
  user       user      @relation(fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_ibfk_1")
  comment    comment[]
  active     Boolean?  @default(true) @db.Boolean

  @@index([author_id], map: "author_idx")
}

model skill {
  id       Int     @id @default(autoincrement())
  name     String? @db.VarChar(45)
  level    String? @db.VarChar(45)
  type     String? @db.VarChar(45)
  field_id Int
  field    field   @relation(fields: [field_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "skill_ibfk_1")

  @@index([field_id], map: "fk_skill_field1_idx")
}

model state {
  id         Int     @unique @default(autoincrement())
  name       String? @db.VarChar(45)
  code       String? @db.VarChar(45)
  country_id Int
  country    country @relation(fields: [country_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "state_ibfk_1")
  city       city[]
  user       user[]

  @@id([id])
  @@index([country_id], map: "state_ibfk_1_idx")
}

model user {
  id                                         String         @id @db.VarChar(255)
  name                                       String         @db.VarChar(255)
  surname                                    String?        @db.VarChar(255)
  email                                      String         @unique @db.VarChar(255)
  password                                   String?        @db.VarChar(255)
  createdAt                                  DateTime?      @default(now()) @db.Timestamp(0)
  avatar                                     String?        @db.VarChar(2048)
  birthdate                                  String?        @db.VarChar(45)
  pronouns                                   String?        @db.VarChar(45)
  nationality                                String?        @db.VarChar(255)
  residence                                  String?        @db.VarChar(255)
  phone                                      String?        @db.VarChar(45)
  description                                String?        @db.VarChar(1024)
  actualJob                                  String?        @db.VarChar(255)
  active                                     Boolean?       @default(true) @db.Boolean
  status                                     String?        @db.VarChar(45)
  language_id                                Int?
  organization_id                            Int?
  country_id                                 Int?
  state_id                                   Int?
  city_id                                    Int?
  language                                   language?      @relation(fields: [language_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_ibfk_1")
  organization                               organization?  @relation("organization", fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_ibfk_2")
  country                                    country?       @relation(fields: [country_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_ibfk_3")
  state                                      state?         @relation(fields: [state_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_ibfk_4")
  city                                       city?          @relation(fields: [city_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_ibfk_5")
  comment                                    comment[]
  hobby                                      hobby[]
  organization_organization_founder_idTouser organization[] @relation("organization_founder_idTouser")
  post                                       post[]
  googleId                                   String?        @unique

  @@index([city_id], map: "cty_id_idx")
  @@index([country_id], map: "fk_user_country1_idx")
  @@index([language_id], map: "fk_user_language1_idx")
  @@index([organization_id], map: "fk_user_organization1_idx")
  @@index([state_id], map: "state_id_idx")
}
